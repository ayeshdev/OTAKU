/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-09-26 13:58:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.frontend;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.hibernate.SessionFactory;
import com.otaku.webapp.util.HibernateUtil;
import org.hibernate.Session;
import com.otaku.webapp.entity.Products;
import java.util.List;
import jakarta.inject.Inject;
import com.otaku.webapp.util.JwtTokenUtil;
import com.otaku.webapp.entity.User;
import com.otaku.webapp.entity.Cart;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/TUF/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/3.0.0/jakarta.servlet.jsp.jstl-3.0.0.jar!/META-INF/c-1_2.tld", Long.valueOf(1649416098000L));
    _jspx_dependants.put("file:/C:/Users/TUF/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar", Long.valueOf(1692297127045L));
    _jspx_dependants.put("file:/C:/Users/TUF/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/3.0.0/jakarta.servlet.jsp.jstl-3.0.0.jar", Long.valueOf(1692620849554L));
    _jspx_dependants.put("jar:file:/C:/Users/TUF/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar!/META-INF/jsp-inheritance.tld", Long.valueOf(1692219220000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.otaku.webapp.entity.Products");
    _jspx_imports_classes.add("com.otaku.webapp.entity.Cart");
    _jspx_imports_classes.add("com.otaku.webapp.util.JwtTokenUtil");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("com.otaku.webapp.entity.User");
    _jspx_imports_classes.add("jakarta.inject.Inject");
    _jspx_imports_classes.add("com.otaku.webapp.util.HibernateUtil");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


    SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
    Session sessionData = sessionFactory.openSession();

    Cookie cookie = null;
    Cookie[] cookies = null;

    String cookie_value = "";

    String email = "";

    cookies = request.getCookies();

    for (int i = 0; i < cookies.length; i++){
        cookie = cookies[i];
        if(cookie.getName().equals("token")){
            cookie_value = cookie.getValue();
        }
    }

    //get user email using token
    if(cookie_value != ""){
        JwtTokenUtil jwtTokenUtil = new JwtTokenUtil();
        email = jwtTokenUtil.getUsernameFromToken(cookie_value);
    }

    User user = sessionData.createQuery("select u from User u where u.email =: email",User.class).setParameter("email",email).getSingleResult();
    Long user_id = user.getId();

    System.out.println(user_id);

    List<Cart> cartList = sessionData.createQuery("select c from Cart c where c.user =: user",Cart.class).setParameter("user_id",user_id).getResultList();
    pageContext.setAttribute("cartList",cartList);
//
    System.out.println(cartList);


    List<Products> productDTO = sessionData.createQuery("select p from Products p", Products.class).getResultList();
    pageContext.setAttribute("product", productDTO);

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_layout_005fextends_005f0(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_layout_005fextends_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:extends
    lk.callidora.jsp.inheritance.ExtendsTag _jspx_th_layout_005fextends_005f0 = new lk.callidora.jsp.inheritance.ExtendsTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fextends_005f0);
    try {
      _jspx_th_layout_005fextends_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/views/frontend/cart.jsp(58,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fextends_005f0.setName("base");
      _jspx_th_layout_005fextends_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_layout_005fextends_005f0, null));
      _jspx_th_layout_005fextends_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fextends_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_layout_005fput_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_parent, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:put
    lk.callidora.jsp.inheritance.PutTag _jspx_th_layout_005fput_005f0 = new lk.callidora.jsp.inheritance.PutTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fput_005f0);
    try {
      _jspx_th_layout_005fput_005f0.setJspContext(_jspx_page_context);
      _jspx_th_layout_005fput_005f0.setParent(_jspx_parent);
      // /WEB-INF/views/frontend/cart.jsp(59,4) name = block type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fput_005f0.setBlock("contents");
      // /WEB-INF/views/frontend/cart.jsp(59,4) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fput_005f0.setType("REPLACE");
      _jspx_th_layout_005fput_005f0.setJspBody(new Helper( 1, _jspx_page_context, _jspx_th_layout_005fput_005f0, null));
      _jspx_th_layout_005fput_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fput_005f0);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private jakarta.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, jakarta.servlet.jsp.JspContext jspContext, jakarta.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("    ");
      if (_jspx_meth_layout_005fput_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write('\r');
      out.write('\n');
      return false;
    }
    public boolean invoke1( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <nav aria-label=\"breadcrumb\" class=\"w-100 float-left\">\r\n");
      out.write("            <ol class=\"breadcrumb parallax justify-content-center\" data-source-url=\"img/banner/parallax.jpg\" style=\"background-image: url(&quot;img/banner/parallax.jpg&quot;); background-position: 50% 0.809717%;\">\r\n");
      out.write("                <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n");
      out.write("                <li class=\"breadcrumb-item active\" aria-current=\"page\">cart</li>\r\n");
      out.write("\r\n");
      out.write("            </ol>\r\n");
      out.write("        </nav>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"cart-area table-area pt-110 pb-95 float-left w-100\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-lg-8 col-md-12 col-sm-12 float-left cart-wrapper\">\r\n");
      out.write("                        <div class=\"table-responsive\">\r\n");
      out.write("                            <table class=\"table product-table text-center\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th class=\"table-remove text-capitalize\">remove</th>\r\n");
      out.write("                                    <th class=\"table-image text-capitalize\">image</th>\r\n");
      out.write("                                    <th class=\"table-p-name text-capitalize\">product</th>\r\n");
      out.write("                                    <th class=\"table-p-price text-capitalize\">price</th>\r\n");
      out.write("                                    <th class=\"table-p-qty text-capitalize\">quantity</th>\r\n");
      out.write("                                    <th class=\"table-total text-capitalize\">total</th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td class=\"table-remove\"><button><i class=\"material-icons\">delete</i></button></td>\r\n");
      out.write("                                    <td class=\"table-image\"><a href=\"product-details.html\"><img src=\"img/productDTO/02.jpg\" alt=\"\"></a></td>\r\n");
      out.write("                                    <td class=\"table-p-name text-capitalize\"><a href=\"product-details.html\">aspetur autodit autfugit</a></td>\r\n");
      out.write("                                    <td class=\"table-p-price\"><p>$100.00</p></td>\r\n");
      out.write("                                    <td class=\"table-p-qty\"><input value=\"1\" name=\"cart-qty\" type=\"number\"></td>\r\n");
      out.write("                                    <td class=\"table-total\"><p>$100.00</p></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td class=\"table-remove\"><button><i class=\"material-icons\">delete</i></button></td>\r\n");
      out.write("                                    <td class=\"table-image\"><a href=\"product-details.html\"><img src=\"img/productDTO/03.jpg\" alt=\"\"></a></td>\r\n");
      out.write("                                    <td class=\"table-p-name text-capitalize\"><a href=\"product-details.html\">magni dolores eosquies</a></td>\r\n");
      out.write("                                    <td class=\"table-p-price\"><p>$100.00</p></td>\r\n");
      out.write("                                    <td class=\"table-p-qty\"><input value=\"1\" name=\"cart-qty\" type=\"number\"></td>\r\n");
      out.write("                                    <td class=\"table-total\"><p>$100.00</p></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"table-bottom-wrapper\">\r\n");
      out.write("                            <div class=\"table-coupon d-flex d-xs-block d-lg-flex d-sm-flex fix justify-content-start float-left\">\r\n");
      out.write("                                <input type=\"text\" placeholder=\"Coupon code\">\r\n");
      out.write("                                <button type=\"submit\" class=\"btn-primary btn\">Apply coupon</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"table-update d-flex d-xs-block d-lg-flex d-sm-flex justify-content-end\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn-primary btn\">Update cart</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"table-total-wrapper d-flex justify-content-end pt-60 col-md-12 col-sm-12 col-lg-4 float-left  align-items-center\">\r\n");
      out.write("                        <div class=\"table-total-content\">\r\n");
      out.write("                            <h2 class=\"pb-20\">Cart totals</h2>\r\n");
      out.write("                            <div class=\"table-total-amount\">\r\n");
      out.write("                                <div class=\"single-total-content d-flex justify-content-between float-left w-100\">\r\n");
      out.write("                                    <strong>Subtotal</strong>\r\n");
      out.write("                                    <span class=\"c-total-price\">$160.00</span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"single-total-content d-flex justify-content-between float-left w-100\">\r\n");
      out.write("                                    <strong>Shipping</strong>\r\n");
      out.write("                                    <span class=\"c-total-price\"><span>Flat Rate:</span> $5.00</span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"single-total-content d-flex justify-content-end float-left w-100\">\r\n");
      out.write("                                    <a href=\"#\">Calculate shipping</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"single-total-content tt-total d-flex justify-content-between float-left w-100\">\r\n");
      out.write("                                    <strong>Total</strong>\r\n");
      out.write("                                    <span class=\"c-total-price\">$165.00</span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <a href=\"checkout_page.html\" class=\"btn btn-primary float-left w-100 text-center\">Proceed to checkout</a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!--Start of Tawk.to Script-->\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("            var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();\r\n");
      out.write("            (function(){\r\n");
      out.write("                var s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0];\r\n");
      out.write("                s1.async=true;\r\n");
      out.write("                s1.src='https://embed.tawk.to/5ac1aabb4b401e45400e4197/default';\r\n");
      out.write("                s1.charset='UTF-8';\r\n");
      out.write("                s1.setAttribute('crossorigin','*');\r\n");
      out.write("                s0.parentNode.insertBefore(s1,s0);\r\n");
      out.write("            })();\r\n");
      out.write("        </script>\r\n");
      out.write("        <!--End of Tawk.to Script-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws jakarta.servlet.jsp.JspException
    {
      jakarta.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(jakarta.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
        }
        jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof jakarta.servlet.jsp.SkipPageException)
            throw (jakarta.servlet.jsp.SkipPageException) e;
        throw new jakarta.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
